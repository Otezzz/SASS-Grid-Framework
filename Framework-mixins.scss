@mixin reset-size {
    margin: 0;
    padding: 0;
}
@mixin list-style-reset {
    margin: 0;
    padding: 0;
    list-style: none;
}
@mixin container-center($width, $margin) {
    width: $width;
    margin: $margin;
}
@mixin size($width, $height) {
    width: $width;
    height: $height;
}
@mixin position-top-right($top, $right) {
	top: $top;
	right: $right;
}
@mixin position-top-left($top, $left) {
	top: $top;
	left: $left;
}
@mixin clearfix {
    content:"";
    display:table;
    clear:both;
}
@mixin display-flex {
    display: -webkit-box;
    display: -moz-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
}
@mixin display-inline-flex {
    display: -webkit-box;
    display: -moz-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: inline-flex;
}
@mixin flex-row-between {
    display: -webkit-box;
    display: -moz-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    -webkit-justify-content: space-between;
            justify-content: space-between;
    -webkit-align-items: flex-start;
            align-items: flex-start;
    -webkit-flex-wrap: wrap;
            flex-wrap: wrap;
}
@mixin inline-flex-row-between {
    display: -webkit-box;
    display: -moz-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: inline-flex;
    -webkit-justify-content: space-between;
            justify-content: space-between;
    -webkit-align-items: flex-start;
            align-items: flex-start;
    -webkit-flex-wrap: wrap;
            flex-wrap: wrap;
}
@mixin flex-row-start {
    display: -webkit-box;
    display: -moz-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    -webkit-justify-content: flex-start;
            justify-content: flex-start;
    -webkit-align-items: flex-start;
            align-items: flex-start;
    -webkit-flex-wrap: wrap;
            flex-wrap: wrap;
}
@mixin flex-column-start {
    display: -webkit-box;
    display: -moz-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    -webkit-flex-direction: column;
            flex-direction: column;
    -webkit-justify-content: flex-start;
            justify-content: flex-start;
    -webkit-align-items: flex-start;
            align-items: flex-start;
    -webkit-flex-wrap: wrap;
            flex-wrap: wrap;
}
@mixin flex-column-end {
    display: -webkit-box;
    display: -moz-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    -webkit-flex-direction: column;
            flex-direction: column;
    -webkit-justify-content: flex-end;
            justify-content: flex-end;
}
@mixin flex-row-end {
    display: -webkit-box;
    display: -moz-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    -webkit-justify-content: flex-end;
            justify-content: flex-end;
    -webkit-align-items: flex-start;
            align-items: flex-start;
    -webkit-flex-wrap: wrap;
            flex-wrap: wrap;
}
@mixin flex-row-around {
    display: -webkit-box;
    display: -moz-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    -webkit-justify-content: space-around;
            justify-content: space-around;
    -webkit-align-items: flex-start;
            align-items: flex-start;
    -webkit-flex-wrap: wrap;
            flex-wrap: wrap;
}
@mixin flex-center {
    display: -webkit-box;
    display: -moz-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    -webkit-justify-content: center;
            justify-content: center;
    -webkit-align-items: center;
            align-items: center;
}
@mixin align-items-top {
  -webkit-box-align: start;
  -webkit-align-items: flex-start;
  -moz-box-align: start;
  -ms-flex-align: start;
  align-items: flex-start;
}

@mixin align-items-bottom {
  -webkit-box-align: end;
  -webkit-align-items: flex-end;
  -moz-box-align: end;
  -ms-flex-align: end;
  align-items: flex-end;
}
@mixin flex-grow {
  -webkit-box-flex: 1;
  -webkit-flex-grow: 1;
  -moz-box-flex: 1;
  -ms-flex-positive: 1;
  flex-grow: 1
}
@mixin flex-shrink {
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
}
@mixin align-items-center {
  -webkit-box-align: center;
  -webkit-align-items: center;
  -moz-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}
@mixin space-between {
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -moz-box-pack: justify;
  -ms-flex-pack: justify;
  justify-content: space-between;
}
@mixin justify-start {
  -webkit-box-pack: start;
  -webkit-justify-content: flex-start;
  -moz-box-pack: start;
  -ms-flex-pack: start;
  justify-content: flex-start;
}
@mixin justify-end {
  -webkit-box-pack: end;
  -webkit-justify-content: flex-end;
  -moz-box-pack: end;
  -ms-flex-pack: end;
  justify-content: flex-end;
}
@mixin justify-center {
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -moz-box-pack: center;
  -ms-flex-pack: center;
  justify-content: center;
}
@mixin flex-wrap {
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
}
@mixin flex-nowrap {
  -webkit-flex-wrap: nowrap;
  -ms-flex-wrap: nowrap;
  flex-wrap: nowrap;
}
@mixin center-absolute-block ($top, $minus-half-width) {
  position: absolute;
  left: 50%;
  top: $top;
  margin-left: $minus-half-width;
}
@mixin center-absolute-block-bottom ($bottom, $minus-half-width) {
  position: absolute;
  left: 50%;
  bottom: $bottom;
  margin-left: $minus-half-width;
}
@mixin center-fixed-block ($top, $minus-half-width) {
  position: fixed;
  left: 50%;
  top: $top;
  margin-left: $minus-half-width;
}
@mixin center-fixed-block-bottom ($bottom, $minus-half-width) {
  position: fixed;
  left: 50%;
  bottom: $bottom;
  margin-left: $minus-half-width;
}
@mixin box-sizing-border {
  -webkit-box-sizing: border-box;
     -moz-box-sizing: border-box;
          box-sizing: border-box;
}
@mixin transform-rotate ($deg) {
  -webkit-transform: rotate($deg);
     -moz-transform: rotate($deg);
      -ms-transform: rotate($deg);
          transform: rotate($deg);
}
@mixin transform-translateX ($pix) {
  -webkit-transform: translateX($pix);
     -moz-transform: translateX($pix);
      -ms-transform: translateX($pix);
          transform: translateX($pix);
}
@mixin transform-translateY ($pix) {
  -webkit-transform: translateY($pix);
     -moz-transform: translateY($pix);
      -ms-transform: translateY($pix);
          transform: translateY($pix);
}
@mixin transform-scale ($scale) {
  webkit-transform: scale($scale);
    -moz-transform: scale($scale);
     -ms-transform: scale($scale);
      -o-transform: scale($scale);
         transform: scale($scale);
}
@mixin transition ($trans-name, $time) {
  -webkit-transition: $trans-name, $time;
     -moz-transition: $trans-name, $time;
      -ms-transition: $trans-name, $time;
       -o-transition: $trans-name, $time;
          transition: $trans-name, $time;
}
@mixin filter-greyscale ($perc) {
  -webkit-filter: grayscale($perc);
      -ms-filter: grayscale($perc);
          filter: grayscale($perc);
}
@mixin backface-visibility ($hidden-visible) {
  -webkit-backface-visibility: $hidden-visible;
     -moz-backface-visibility: $hidden-visible;
      -ms-backface-visibility: $hidden-visible;
}
@mixin not-selectable {
    -moz-user-select: none;
    -ms-user-select: none;
    -webkit-user-select: none;
    -o-user-select: none;
    user-select: none;
}
@mixin triangle($direction: up, $size: 5px, $color: #000000) {
    content: '';
    position: absolute;
    width: 0;
    height: 0;
    display: block;

    @if $direction == up {
        border-right: $size solid transparent;
        border-left: $size solid transparent;
        border-bottom: $size solid $color;
        border-top: none;
    }

    @if $direction == down {
        border-right: $size solid transparent;
        border-left: $size solid transparent;
        border-top: $size solid $color;
        border-bottom: none;
    }

    @if $direction == right {
        border-top: $size solid transparent;
        border-bottom: $size solid transparent;
        border-left: $size solid $color;
        border-right: none;
    }

    @if $direction == left {
        border-top: $size solid transparent;
        border-bottom: $size solid transparent;
        border-right: $size solid $color;
        border-left: none;
    }
}
@mixin h1 {
    margin: 0;
    padding: 0;

    font-family: $font-base-droid-bold;
    font-size: 26px;
    font-style: normal;
    color: $color-link;

    text-rendering: optimizeLegibility;
}

@mixin h2 {
    margin: 0;
    padding: 0;

    font-family: $font-base-droid-bold;
    font-size: 20px;
    font-style: normal;
    color: $color-link;

    text-rendering: optimizeLegibility;
}

@mixin h3 {
    margin: 0;
    padding: 0;

    font-family: $font-base-droid-bold;
    font-size: 18px;
    font-style: normal;
    color: $color-link;

    text-rendering: optimizeLegibility;
}

@mixin h4 {
    margin: 0;
    margin-bottom: 10px;
    color: $c-h4;
    font-family: $f-stack-special;
    font-size: 14px;
    font-weight: bold;
    font-style: normal;
    line-height: 1.4;
    text-rendering: optimizeSpeed;
    text-transform: uppercase;
}

@mixin h5 {
    margin: 0;
    margin-bottom: 10px;
    color: $c-h5;
    font-family: $f-stack-sans;
    font-size: 13px;
    font-weight: bold;
    font-style: normal;
    line-height: 1.4;
    text-rendering: optimizeSpeed;
    text-transform: uppercase;
}

@mixin h6 {
    margin: 0;
    margin-bottom: 5px;
    color: $c-h6;
    font-family: $f-stack-sans;
    font-size: 12px;
    font-weight: bold;
    font-style: normal;
    line-height: 1.4;
    text-rendering: optimizeSpeed;
    text-transform: uppercase;
}

@mixin pageTitle() {
    text-transform: uppercase;
    font-size: 24px;
    font-weight: 600;
    color: $c-text;
    border-bottom: 1px solid $c-module-border-light;
    padding-bottom: 3px;
    margin-bottom: 15px;
    text-transform: uppercase;
}
@mixin border-radius ($rad) {
  -webkit-border-radius: $rad;
  -moz-border-radius: $rad;
  -ms-border-radius: $rad;
  -o-border-radius: $rad;
  border-radius: $rad;
}
@mixin shadow-text() {
  text-shadow: 0px 0px 0px rgba(0, 0, 0, 1);
}
@mixin left-aside() {
    font-family: $font-base-droid-bold;
    font-size: $font-size-bold;
    color: $color-link;
}

/*  Grid percentage mixin  */

@mixin grid($grid) {
  $totalWidth: 0;
  @each $className, $width in $grid {
    $totalWidth: $totalWidth + $width;
  }
  @each $className, $width in $grid {
    .#{$className} {
      width: (#{$width / $totalWidth * 100}) + '%';
    }
  }
}

/*  Width/height percentage mixin  */

@mixin widthPercentage($totalGridWidth: 0, $blocksWidth: 0, $numberOfBlocks: 0, $margin: false) {
  width: percentage($blocksWidth / $totalGridWidth);

  @if $margin == true {
    margin-right: percentage((($totalGridWidth - $blocksWidth * $numberOfBlocks) / ($numberOfBlocks - 1)) / $totalGridWidth);
    &:nth-child(#{$numberOfBlocks + 'n'}) {
      margin-right: 0;
    }
  }
}
@mixin heightPercentage($totalGridHeight: 0, $blocksHeight: 0) {
  height: percentage($blocksHeight / $totalGridHeight);
}

/*  Adaptive sprites mixin  */

@mixin spritesPercentage($spriteName, $totalSheetWidth: 0, $totalSheetHeight: 0, $spriteWidth: 0, $spriteHeight: 0, $spritePositionX: 0, $spritePositionY: 0) {
    width: 100%;
    max-width: $spriteWidth + px;
    height: $spriteHeight + px;

    background: url("../images/sprites/" + $spriteName + ".png") no-repeat center;
    background-position-x: percentage($spritePositionX / ($totalSheetWidth - $spriteWidth));
    background-position-y: percentage($spritePositionY / ($totalSheetHeight - $spriteHeight));
    background-size: percentage($totalSheetWidth / $spriteWidth), percentage($totalSheetHeight / $spriteHeight);
  /*}*/
}

@mixin gridRow($rowNumber: 3, $padding: 10px) {
  display: block;
  width: percentage(1 / $rowNumber);
  padding-left: $padding;
  padding-right: $padding;
}

/*  Brakepoint mixin  */

@mixin respond-to($breakpoint, $maxMin:max-width) {
  @if map-has-key($breakpoints, $breakpoint) {
    @media ($maxMin: #{map-get($breakpoints, $breakpoint)}) {
      @content;
    }
  }

  @else {
    @error "Unfortunately, no value could be retrieved from `#{$breakpoint}`. "
        + "Please make sure it is defined in `$breakpoints` map.";
  }
}

/*  Brakepoints massive  */

$breakpoints: (
  iPadProLandscape: 1366px,
  iPadLandscape: 1024px,
  iPadPortrait: 768px,
  iPhone6PlusLandscape: 736px,
  iPhone6Landscape: 667px,
  iPhone5Landscape: 568px,
  iPhone6PlusPortrait: 414px,
  iPhone6Portrait: 375px,
  iPhone5Portrait: 320px
);

/*  Brakepoint mixin end */
